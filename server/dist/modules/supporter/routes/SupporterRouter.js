"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const authenticateUser_1 = require("../../authentication/middlewares/authenticateUser");
const authorizeUser_1 = __importDefault(require("../../../middlewares/authorizeUser"));
const setFilterParams_1 = __importDefault(require("../../../middlewares/setFilterParams"));
const supporterListDoc_1 = require("../docs/supporterListDoc");
const Supporter_1 = require("../models/Supporter");
const supporterCountDoc_1 = require("../docs/supporterCountDoc");
const supporterDetailsDoc_1 = require("../docs/supporterDetailsDoc");
const supporterCreateDoc_1 = require("../docs/supporterCreateDoc");
const supporerCreateValidator_1 = require("../validators/supporerCreateValidator");
const supporterUpdateDoc_1 = require("../docs/supporterUpdateDoc");
const supporterUpdateValidator_1 = require("../validators/supporterUpdateValidator");
const Supporter_2 = __importDefault(require("../controllers/Supporter"));
const supporterDeleteDoc_1 = require("../docs/supporterDeleteDoc");
const roles_1 = __importDefault(require("../../base/enums/roles"));
const router = express_1.default.Router();
const controller = new Supporter_2.default();
router.get("/get-all-data", supporterListDoc_1.supporterListDoc, controller.getAllData);
router.get("/get-country-data/:id", supporterListDoc_1.supporterListDoc, controller.getCountryDetails);
router.get("/get-bed-data/:id", supporterListDoc_1.supporterListDoc, controller.getBedDetails);
router.post("/", supporterCreateDoc_1.supporterCreateDoc, supporerCreateValidator_1.supporterCreateValidator, controller.create);
router.get('/contact-info', supporterListDoc_1.supporterListDoc, controller.getContactInfoController);
router.use(authenticateUser_1.authenticateUser);
const authorization = (0, authorizeUser_1.default)({ allowedRoles: [] });
router.get("/supporter-head", supporterListDoc_1.supporterListDoc, controller.getSupporterHead);
router.post("/get", supporterListDoc_1.supporterListDoc, (0, setFilterParams_1.default)(Supporter_1.supporterFilterFields), controller.get);
router.get("/supporter", supporterListDoc_1.supporterListDoc, (0, setFilterParams_1.default)(Supporter_1.supporterFilterFields), controller.getSupporter);
router.get("/count-documents", supporterCountDoc_1.supporterCountDoc, controller.countTotalDocuments);
router.get("/user/:id", supporterDetailsDoc_1.supporterDetailsDoc, controller.getWithUserId);
router.get("/:id", supporterDetailsDoc_1.supporterDetailsDoc, controller.getOne);
router.put("/:id", supporterUpdateDoc_1.supporterUpdateDoc, (0, authorizeUser_1.default)({ allowedRoles: [roles_1.default.staff] }), supporterUpdateValidator_1.supporterUpdateValidator, controller.update);
router.delete("/:id", supporterDeleteDoc_1.supporterDeleteDoc, authorization, controller.delete);
exports.default = router;
